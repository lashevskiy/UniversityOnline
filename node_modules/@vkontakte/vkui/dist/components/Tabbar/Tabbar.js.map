{"version":3,"sources":["../../../src/components/Tabbar/Tabbar.js"],"names":["baseClassName","Tabbar","props","className","children","shadow","insets","itemsLayout","paddingBottom","isNaN","bottom","React","Children","count","Component","PropTypes","string","node","bool","oneOf","object"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAG,2BAAa,QAAb,CAAtB;;IAEMC,M;;;;;;;;;;;;;6BA+BM;AAAA,wBACwC,KAAKC,KAD7C;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,QADX,eACWA,QADX;AAAA,UACqBC,MADrB,eACqBA,MADrB;AAAA,UAC6BC,MAD7B,eAC6BA,MAD7B;AAGR,aACE;AAAK,QAAA,SAAS,EAAE,yBAAWN,aAAX,EAA0BG,SAA1B,sBAAkD,KAAKI,WAAvD,GAAsE;AACpF,4BAAkBF;AADkE,SAAtE,CAAhB;AAEI,QAAA,KAAK,EAAE;AAAEG,UAAAA,aAAa,EAAEC,KAAK,CAACH,MAAM,CAACI,MAAR,CAAL,GAAuB,IAAvB,GAA8BJ,MAAM,CAACI;AAAtD;AAFX,SAGGN,QAHH,CADF;AAOD;;;wBAtBkB;AAAA,yBACiB,KAAKF,KADtB;AAAA,UACTE,QADS,gBACTA,QADS;AAAA,UACCG,WADD,gBACCA,WADD;;AAGjB,cAAQA,WAAR;AACE,aAAK,YAAL;AACA,aAAK,UAAL;AACE,iBAAOA,WAAP;;AACF;AACE,iBAAOI,eAAMC,QAAN,CAAeC,KAAf,CAAqBT,QAArB,IAAiC,CAAjC,GAAqC,UAArC,GAAkD,YAAzD;AALJ;AAOD;;;;EA7BkBO,eAAMG,S;;gBAArBb,M,eACe;AACjBE,EAAAA,SAAS,EAAEY,mBAAUC,MADJ;AAEjBZ,EAAAA,QAAQ,EAAEW,mBAAUE,IAFH;;AAGjB;;;AAGAZ,EAAAA,MAAM,EAAEU,mBAAUG,IAND;AAOjBX,EAAAA,WAAW,EAAEQ,mBAAUI,KAAV,CAAgB,CAAC,UAAD,EAAa,YAAb,EAA2B,MAA3B,CAAhB,CAPI;;AAQjB;;;AAGAb,EAAAA,MAAM,EAAES,mBAAUK;AAXD,C;;gBADfnB,M,kBAekB;AACpBI,EAAAA,MAAM,EAAE;AADY,C;;eA6BT,yBAAWJ,MAAX,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport getClassName from '../../helpers/getClassName';\nimport classNames from '../../lib/classNames';\nimport withInsets from '../../hoc/withInsets';\n\nconst baseClassName = getClassName('Tabbar');\n\nclass Tabbar extends React.Component {\n  static propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.node,\n    /**\n     * флаг для показа/скрытия верхней тени (Android) или границы (iOS)\n     */\n    shadow: PropTypes.bool,\n    itemsLayout: PropTypes.oneOf(['vertical', 'horizontal', 'auto']),\n    /**\n     * @ignore\n     */\n    insets: PropTypes.object\n  };\n\n  static defaultProps = {\n    shadow: true\n  };\n\n  get itemsLayout () {\n    const { children, itemsLayout } = this.props;\n\n    switch (itemsLayout) {\n      case 'horizontal':\n      case 'vertical':\n        return itemsLayout;\n      default:\n        return React.Children.count(children) > 2 ? 'vertical' : 'horizontal';\n    }\n  }\n\n  render () {\n    const { className, children, shadow, insets } = this.props;\n\n    return (\n      <div className={classNames(baseClassName, className, `Tabbar--l-${this.itemsLayout}`, {\n        'Tabbar--shadow': shadow\n      })} style={{ paddingBottom: isNaN(insets.bottom) ? null : insets.bottom }}>\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default withInsets(Tabbar);\n"],"file":"Tabbar.js"}